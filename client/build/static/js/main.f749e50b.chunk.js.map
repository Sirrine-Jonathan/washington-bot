{"version":3,"sources":["components/PageHeader.js","components/PageContainer.js","components/Log.js","components/Canvas.js","components/ControlPanel.js","utils.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["PageHeader","children","props","StyledPageHeader","styled","div","PageContainer","StyledPageContainer","Log","log","ref","useRef","useEffect","current","scrollTop","scrollHeight","StyledLog","map","line","idx","Buffer","Tile","tile","data","showTileNumbers","terrain","armies","usernames","meta","playerIndex","playerColors","isCity","cities","includes","army_count","classes","push","general_tile","num","ArmyCount","current_path","current_target","random_from","console","StyledTile","className","join","TileNumber","Canvas","StyledCanvas","GameArea","Meta","MetaTitle","MetaRow","MetaLabel","href","replay_url","username","MetaSub","Board","rows","row","col_count","row_count","i","size","width","MapRow","displayBoard","MessageContainer","Message","ControlPanel","bot","useState","gameID","setGameID","Card","Group","fluid","Content","Header","style","display","justifyContent","ControlTitle","Row","StyledInput","type","value","placeholder","onChange","e","target","StyledButton","secondary","onClick","dir","fetch","then","res","json","toast","StyledLink","url","rel","Icon","name","Divider","ButtonRow","color","primary","window","open","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Input","Button","a","patch","old","diff","out","length","Array","prototype","apply","slice","HomePage","height","generals","owned","enemies","perimeter","game","setGame","gameRef","setLog","logRef","game_start_handler","newGame","encodeURIComponent","replay_id","game_update_handler","internal_tick","turn","game_tick","Math","ceil","ticks_til_payday","map_diff","cities_diff","filter","isEnemy","leave_game_handler","log_handler","socket","io","on","off","ImageContainer","Image","src","marginTop","marginRight","Col","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f749e50b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst PageHeader = ({children, ...props}) => {\n  return (\n    <StyledPageHeader {...props}>\n      {children}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader;\n\nconst StyledPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #2a2a3a;\n  padding: 20px;\n  & h1 {\n    color: white;\n    padding: 0;\n    margin: 0;\n  }\n`;","import styled from \"styled-components\";\n\nconst PageContainer = ({ children }) => {\n  return <StyledPageContainer>{children}</StyledPageContainer>;\n};\n\nexport default PageContainer;\n\nconst StyledPageContainer = styled.div``;\n","import styled from \"styled-components\";\nimport { useEffect, useRef } from \"react\";\nconst Log = ({ log }) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.scrollTop = ref.current.scrollHeight;\n  });\n  return (\n    <>\n      <StyledLog ref={ref}>\n        {log.map((line, idx) => (\n          <div key={idx}>{line}</div>\n        ))}\n      </StyledLog>\n      <Buffer />\n    </>\n  );\n};\n\nexport default Log;\n\nconst StyledLog = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  text-align: center;\n  background: #333;\n  color: #fff;\n  height: 700px;\n  padding: 10px;\n  border-radius: 5px;\n  margin: 20px 0;\n  overflow-y: scroll;\n`;\n\nconst Buffer = styled.div`\n  height: 70px;\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Tile = ({ tile, data, showTileNumbers }) => {\n  const TILE_EMPTY = -1;\n  const TILE_MOUNTAIN = -2;\n  const TILE_FOG = -3;\n  const TILE_FOG_OBSTACLE = -4;\n  const terrain = data.terrain;\n  const armies = data.armies;\n  const usernames = data?.meta?.usernames;\n  const playerIndex = data?.meta?.playerIndex;\n  const playerColors = data?.meta?.playerColors;\n  const isCity = data?.cities?.includes(tile);\n  let army_count = null;\n  let classes = [];\n  if (terrain[tile] === TILE_EMPTY) {\n    classes.push(\"empty\");\n  } else if (terrain[tile] === TILE_MOUNTAIN) {\n    classes.push(\"mountain\");\n  } else if (terrain[tile] === TILE_FOG) {\n    classes.push(\"fog\");\n  } else if (terrain[tile] === TILE_FOG_OBSTACLE) {\n    classes.push(\"fog-obstacle\");\n  } else if (terrain[tile] >= 0) {\n    if (terrain[tile] === playerIndex) {\n      classes.push(\"owned\");\n      if (tile === data.general_tile) {\n        classes.push(\"owned-general\");\n      }\n    } else {\n      let num = terrain[tile];\n      classes.push(`enemy`);\n      classes.push(`enemy-${num}`);\n      classes.push(usernames[num]);\n      classes.push(`color-${playerColors[num]}`);\n    }\n    army_count = <ArmyCount>{armies[tile]}</ArmyCount>;\n  }\n  if (isCity) {\n    classes.push(\"city\");\n    army_count = <ArmyCount>{armies[tile]}</ArmyCount>;\n  }\n  if (data?.current_path && data?.current_path.includes(tile)) {\n    classes.push(\"path-tile\");\n  }\n  if (data.current_target === tile) {\n    classes.push(\"current-target\");\n  }\n  if (data.random_from === tile) {\n    classes.push(\"random-from\");\n  }\n  if (classes.includes(\"current-target\")) {\n    console.log(`set class current-target on tile ${tile}`);\n  }\n  return (\n    <StyledTile className={classes.join(\" \")} data-tile={tile}>\n      {army_count}\n      {showTileNumbers && <TileNumber>{tile}</TileNumber>}\n    </StyledTile>\n  );\n};\n\nconst Canvas = ({ data, showTileNumbers = true }) => {\n  const displayBoard = () => {\n    let rows = [];\n    let row = [];\n    let col_count = 0;\n    let row_count = 0;\n    for (let i = 0; i < data.size; i++) {\n      row.push(\n        <Tile key={i} tile={i} data={data} showTileNumbers={showTileNumbers} />\n      );\n      col_count++;\n      if (col_count === data.width) {\n        col_count = 0;\n        row_count++;\n        rows.push(<MapRow key={`row-${row_count}`}>{row}</MapRow>);\n        row = [];\n      }\n    }\n    return rows;\n  };\n\n  return (\n    <StyledCanvas>\n      {data && data.meta ? (\n        <GameArea>\n          <Meta>\n            <MetaTitle>Game Information</MetaTitle>\n            <MetaRow>\n              <MetaLabel>Player Index:</MetaLabel>\n              {data?.meta.playerIndex}\n            </MetaRow>\n            <MetaRow>\n              <MetaLabel>Replay URL:</MetaLabel>\n              <a href={data?.meta.replay_url}>{data?.meta.replay_url}</a>\n            </MetaRow>\n            <div>\n              <MetaLabel>Players:</MetaLabel>\n              {data?.meta?.usernames &&\n                data?.meta?.usernames.map((username, idx) => {\n                  return (\n                    <MetaSub key={username}>\n                      <MetaLabel>{idx}:</MetaLabel>\n                      {username}\n                    </MetaSub>\n                  );\n                })}\n            </div>\n          </Meta>\n          <Board className=\"Board\">{displayBoard()}</Board>\n        </GameArea>\n      ) : (\n        <MessageContainer>\n          <Message>No Game Running</Message>\n        </MessageContainer>\n      )}\n    </StyledCanvas>\n  );\n};\nexport default Canvas;\nconst StyledCanvas = styled.div``;\nconst MessageContainer = styled.div`\n  width: 100%;\n  display: flex;\n  text-align: center;\n  background: #fefefe;\n  height: 150px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  margin: 20px 0;\n`;\nconst GameArea = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  margin: 20px 0;\n  box-sizing: border-box;\n`;\nconst Meta = styled.div`\n  width: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  color: #000;\n  border-radius: 10px;\n  padding: 15px 30px;\n  font-size: 15px;\n`;\nconst MetaTitle = styled.div`\n  font-size: 30px;\n  color: #000;\n  text-shadow: 1px 1px 3px solid #eee;\n  padding: 10px 0 20px;\n`;\nconst MetaRow = styled.div`\n  display: flex;\n`;\nconst MetaSub = styled.div`\n  display: flex;\n  margin-left: 15px;\n`;\nconst MetaLabel = styled.div`\n  margin-right: 10px;\n  font-weight: bold;\n`;\nconst Board = styled.div`\n  margin: 20px;\n  background: #f0ead6;\n  border-radius: 10px;\n  overflow: hidden;\n`;\nconst MapRow = styled.div`\n  display: flex;\n`;\nconst Message = styled.div`\n  font-size: 30px;\n`;\nconst ArmyCount = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: 7px;\n  font-size: 25px;\n  font-weight: bold;\n`;\nconst TileNumber = styled.div`\n  position: absolute;\n  top: 0;\n  right: 5px;\n  font-size: 10px;\n`;\nconst StyledTile = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  margin: 1px;\n  display: flex;\n  justify-content: center;\n  box-sizing: border-box;\n  align-items: center;\n  color: #000;\n  background: #e2d7b1;\n  border-radius: 10px;\n  &.owned {\n    background: #2185d0;\n    color: #fff;\n  }\n  &.owned-general {\n    background: gold;\n    color: #000;\n  }\n  &.empty {\n    background: #f0ead6;\n    box-shadow: 2px 2px 3px #e2d7b1;\n    color: #000;\n  }\n  &.mountain {\n    background: black;\n    color: #fff;\n  }\n  &.enemy {\n    background: red;\n    color: #fff;\n  }\n  &.city {\n    background: purple;\n    color: #fff;\n  }\n  &.path-tile {\n    background: green;\n    color: #fff;\n  }\n  &.current-target {\n    background: gold;\n    color: #000;\n  }\n  &.random-from {\n    background: #feeaee;\n    color: #000;\n  }\n  &.current-path &::before {\n    content: attr(\"data-tile\");\n    position: absolute;\n  }\n`;\n","import { useState } from \"react\";\nimport { Card, Input, Button, Icon, Divider, Image } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styled from \"styled-components\";\nconst ControlPanel = ({ bot }) => {\n  const [gameID, setGameID] = useState(\"sirrine\");\n  const quit = () => {\n    fetch(`/quit`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(\n          <StyledLink href={`${data.url}`} target=\"_blank\" rel=\"noreferrer\">\n            Quit Game!\n          </StyledLink>\n        );\n      });\n  };\n  const quickplay = () => {\n    fetch(`/quickplay`)\n      .then((res) => res.json())\n      .then((data) => {\n        window.open(data.url, \"_blank\");\n      });\n  };\n  const invite = (dir) => {\n    fetch(`/invite/${gameID}`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(\n          <StyledLink href={`${data.url}`} target=\"_blank\" rel=\"noreferrer\">\n            Game Starting!\n          </StyledLink>\n        );\n      });\n  };\n  const join = () => {\n    fetch(`/rejoin`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(\n          <StyledLink href={`${data.url}`} target=\"_blank\" rel=\"noreferrer\">\n            Rejoined!\n          </StyledLink>\n        );\n      });\n  };\n  const challenge = () => {\n    fetch(`/1v1`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(\n          <StyledLink href={`${data.url}`} target=\"_blank\" rel=\"noreferrer\">\n            Joining 1v1\n          </StyledLink>\n        );\n      });\n  };\n  const play = () => {\n    fetch(`/ffa`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(\n          <StyledLink href={`${data.url}`} target=\"_blank\" rel=\"noreferrer\">\n            Joining FFA\n          </StyledLink>\n        );\n      });\n  };\n  return (\n    <Card.Group>\n      <Card fluid>\n        <Card.Content>\n          <Card.Header\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <ControlTitle>Control Panel</ControlTitle>\n            <Row>\n              <StyledInput\n                type=\"text\"\n                value={gameID}\n                placeholder=\"Game ID\"\n                onChange={(e) => {\n                  setGameID(e.target.value);\n                }}\n              />\n              <StyledButton secondary onClick={invite}>\n                <Icon name=\"envelope\" />\n                <div>Invite</div>\n              </StyledButton>\n            </Row>\n          </Card.Header>\n          <Divider />\n          <ButtonRow>\n            <StyledButton color=\"red\" onClick={quit}>\n              <Icon name=\"close icon\" />\n              <div>Quit</div>\n            </StyledButton>\n            <StyledButton primary onClick={quickplay}>\n              <Icon name=\"game\" />\n              <div>Quick Play</div>\n            </StyledButton>\n            <StyledButton primary onClick={challenge}>\n              <Icon name=\"game\" />\n              <div>1v1</div>\n            </StyledButton>\n            <StyledButton primary onClick={play}>\n              <Icon name=\"game\" />\n              <div>Free-for-All</div>\n            </StyledButton>\n            <StyledButton secondary onClick={join}>\n              <Icon name=\"redo alternate\" />\n              <div>Ready Up</div>\n            </StyledButton>\n          </ButtonRow>\n        </Card.Content>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick={false}\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </Card>\n    </Card.Group>\n  );\n};\n\nexport default ControlPanel;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: start;\n  box-sizing: border-box;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nconst StyledInput = styled(Input)`\n  margin-right: 4px;\n`;\n\nconst StyledButton = styled(Button)`\n  display: flex !important;\n  flex-wrap: no-wrap !important;\n  flex-direction: row !important;\n  justify-content: center;\n  align-items: center;\n  & div {\n    padding-left: 5px;\n  }\n`;\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  font-size: 16px;\n  color: #000;\n  &:hover {\n    color: #333;\n    text-decoration: underline;\n  }\n`;\n\nconst ControlTitle = styled.div`\n  font-size: 30px;\n  padding: 10px;\n`;\n","export const getLeft = (tile, width) => tile - 1;\nexport const getRight = (tile, width) => tile + 1;\nexport const getDown = (tile, width) => tile + this.width;\nexport const getUp = (tile, width) => tile - this.width;\n\nexport const patch = (old, diff) => {\n  const out = [];\n  let i = 0;\n  while (i < diff.length) {\n    if (diff[i]) {\n      // matching\n      Array.prototype.push.apply(\n        out,\n        old.slice(out.length, out.length + diff[i])\n      );\n    }\n    i++;\n    if (i < diff.length && diff[i]) {\n      // mismatching\n      Array.prototype.push.apply(out, diff.slice(i + 1, i + 1 + diff[i]));\n      i += diff[i];\n    }\n    i++;\n  }\n  return out;\n};\n\nexport const isEnemy = (tile, terrain, playerIndex) => {\n  return terrain[tile] !== playerIndex && terrain[tile] >= 0;\n};\n\nexport const getSurrounding = (tile, width) => {\n  return [\n    getUp(tile, width),\n    getRight(tile, width),\n    getDown(tile, width),\n    getLeft(tile, width),\n  ];\n};\n","import { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { Container, Icon, Image } from \"semantic-ui-react\";\nimport PageHeader from \"../components/PageHeader\";\nimport PageContainer from \"../components/PageContainer\";\nimport Log from \"../components/Log\";\nimport Canvas from \"../components/Canvas\";\nimport ControlPanel from \"../components/ControlPanel\";\nimport { patch, isPerimeter, isEnemy } from \"../utils\";\nconst ENDPOINT = \"http://localhost:8080\";\n\nconst HomePage = () => {\n  const [game, setGame] = useState({\n    meta: null,\n    map: [],\n    width: 0,\n    height: 0,\n    size: 0,\n    generals: [],\n    cities: [],\n    terrain: [],\n    owned: [],\n    enemies: [],\n    perimeter: [], // TODO: determine perimeter on update\n  });\n  const gameRef = useRef(game);\n  useEffect(() => {\n    gameRef.current = game;\n  });\n  const [log, setLog] = useState([]);\n  const logRef = useRef(log);\n  useEffect(() => {\n    logRef.current = log;\n  });\n\n  const game_start_handler = (data) => {\n    console.log(\"game_start\", data);\n    // handle a few things at start of game\n    const newGame = {\n      ...gameRef.current,\n      meta: {\n        replay_url: `http://bot.generals.io/replays/${encodeURIComponent(\n          data.replay_id\n        )}`,\n        ...data,\n      },\n    };\n    setGame(newGame);\n  };\n\n  const game_update_handler = (data) => {\n    console.log({ data });\n    if (data === null) return false;\n    if (gameRef?.current?.meta === null) return false;\n\n    // tick data\n    const internal_tick = data.turn / 2;\n    const game_tick = Math.ceil(internal_tick);\n    const ticks_til_payday = 25 - (game_tick % 25);\n\n    // map data\n    const map = patch(gameRef?.current?.map, data.map_diff);\n    const cities = patch(gameRef?.current?.cities, data.cities_diff);\n    const generals = data.generals;\n    const width = map[0];\n    const height = map[1];\n    const size = width * height;\n    const armies = map.slice(2, gameRef?.current?.size + 2);\n    const terrain = map.slice(gameRef?.current?.size + 2);\n    const owned = terrain\n      .map((tile, idx) => {\n        if (tile === gameRef?.current?.meta?.playerIndex) {\n          return idx;\n        }\n        return null;\n      })\n      .filter((tile) => tile !== null);\n    const enemies = terrain\n      .map((tile, idx) => {\n        if (isEnemy(idx, terrain, gameRef?.current?.meta?.playerIndex)) {\n          return idx;\n        }\n        return null;\n      })\n      .filter((tile) => tile !== null);\n    const newGame = {\n      ...gameRef.current,\n      internal_tick,\n      game_tick,\n      ticks_til_payday,\n      map,\n      cities,\n      generals,\n      armies,\n      terrain,\n      owned,\n      enemies,\n      current_path: data.current_path,\n      current_target: data.current_target,\n      random_from: data.random_from,\n    };\n\n    // first tick stuff\n    if (\n      data.turn === 1 ||\n      gameRef?.current?.width === 0 ||\n      gameRef?.current?.height === 0\n    ) {\n      console.log(\"setting first tick stuff\");\n      newGame[\"general_tile\"] =\n        data.generals[gameRef?.current?.meta?.playerIndex];\n      newGame[\"width\"] = width;\n      newGame[\"height\"] = height;\n      newGame[\"size\"] = size;\n      console.log(\"FIRST TICK GAME\", newGame);\n    }\n\n    setGame(newGame);\n  };\n\n  const leave_game_handler = () => {\n    console.log(\"leave_game_handler\");\n    setGame({\n      meta: null,\n      internal_tick: 0,\n      game_tick: 0,\n      ticks_til_payday: 25,\n      map: [],\n      generals: [],\n      cities: [],\n      terrain: [],\n      owned: [],\n      enemies: [],\n      perimeter: [], // TODO: determine perimeter on update\n    });\n  };\n\n  const log_handler = (line) => {\n    setLog(line);\n  };\n\n  useEffect(() => {\n    const socket = io(ENDPOINT);\n    socket.on(\"game_update\", game_update_handler);\n    socket.on(\"game_start\", game_start_handler);\n    socket.on(\"leave_game\", leave_game_handler);\n    socket.on(\"log\", log_handler);\n    return () => {\n      socket.off(\"game_update\", game_update_handler);\n      socket.off(\"game_start\", game_start_handler);\n      socket.off(\"leave_game\", leave_game_handler);\n      socket.off(\"log\", log_handler);\n    };\n  }, []);\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <Row>\n          <ImageContainer\n            href=\"https://generals.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Image\n              src=\"/robot.png\"\n              style={{ width: \"50px\", marginTop: \"-5px\" }}\n            />\n          </ImageContainer>\n          <a\n            href=\"https://github.com/Sirrine-Jonathan/generals-bots.git\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{ marginRight: \"15px\" }}\n          >\n            <Icon name=\"github\" style={{ color: \"#fff\" }} size=\"huge\" />\n          </a>\n          <Col>\n            <h1>Washington</h1>\n            <h4>Generals.io Bot</h4>\n          </Col>\n        </Row>\n      </PageHeader>\n      <Container>\n        <Canvas data={game} />\n        <ControlPanel />\n        <Log log={log} />\n      </Container>\n    </PageContainer>\n  );\n};\nexport default HomePage;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ImageContainer = styled.a`\n  background: #fff;\n  border-radius: 60px;\n  height: 60px;\n  width: 60px;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 15px;\n  cursor: pointer;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: white;\n  & * {\n    margin: 0;\n  }\n`;\n","import HomePage from './pages/HomePage'\nconst App = () => <HomePage />\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}